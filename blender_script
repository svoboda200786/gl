import bpy
from mathutils import Vector

# get current object
o = bpy.context.object

# make a copy (as we'll change data below)
m = o.data.copy()

# calculate triangles loop
m.calc_loop_triangles()

verts = []
normals = []
uvs = []

# get triangles loop elements corresponding to the selected faces
l_triangles = [lt for lt in m.loop_triangles
    if m.polygons[lt.polygon_index].select]

# get active uv layer
uv_layer = m.uv_layers.active

# loop over the triangles
for lt in l_triangles:
    # get the corresponding polygon and normal
    polygon_index = lt.polygon_index
    polygon = m.polygons[polygon_index]
    polygon_normal = polygon.normal
    # loop over vertices ranks
    for i in range(3):
        # get corresponding vertex index and normal
        #vertex_index = lt.vertices[i]
        #vertex_normal = Vector(lt.split_normals[i])
        # get uv coordinates
        #uv_co = uv_layer[lt.loops[i]].vector
        # print results
        v = m.vertices[lt.vertices[i]]
        verts.append(v.co.xyz)
        normals.append([v.normal[0],v.normal[1],v.normal[2]])
        uvs.append(uv_layer.data[lt.loops[i]].uv)       

outputFile = 'C:/tmp/mesh.csv'

csvLines = [ ','.join([ str(v) for v in co ]) + ',\n' for co in verts ]

f = open( outputFile, 'w' )
f.writelines( csvLines )
f.close()

# delete the mesh copy        
bpy.data.meshes.remove(m)

outputFile = 'C:/tmp/mesh2.csv'

csvLines = [ ','.join([ str(v) for v in co ]) + ',\n' for co in normals ]

f = open( outputFile, 'w' )
f.writelines( csvLines )
f.close()

outputFile = 'C:/tmp/mesh3.csv'

csvLines = [ ','.join([ str(v) for v in co ]) + ',\n' for co in uvs ]

f = open( outputFile, 'w' )
f.writelines( csvLines )
f.close()